class Block{
  field int x;
  field int y;
  field Block next;

  constructor Block new(int xIn, int yIn, Block nextIn) {
      let x = xIn;
      let y = yIn;
      let next = nextIn;

      return this;
  }

  method Block getNext(){
      return next;
  }

  method void addHelper(Block nextIn){
      let next=nextIn;
      return;
  }

  method void addFromHead(Block nextIn) {
      var Block current;
      let current = this;
      while (~(current.getNext()=null)){
          let current = current.getNext();
      }
      do current.addHelper(nextIn);
      return;
  }

  method void incrementY(){
      let y = y+1;
      return;
  }

  method void incrementFromHead() {
      var Block current;
      let current = this;
      while (~(current.getNext()=null)){

      	do current.erase();
        do current.incrementY();

        do current.draw();
        let current = current.getNext();
      }
      return;
  }

  method int toDestroy(){
  	var int key;
  	if (y>192){
  		let key = Keyboard.keyPressed()-5;

  		if (key=x){
  			return 1;
  		}
  	}
    if (y>222){
        return 1;
    }
  	return 0;
  }

  method void draw() {
      do Screen.setColor(true);
      do Screen.drawRectangle(x, y, x + 128, y + 32);
      return;
  }

  method void erase() {
      do Screen.setColor(false);
      do Screen.drawRectangle(x, y, x + 128, y + 32);
      return;
  }
}
